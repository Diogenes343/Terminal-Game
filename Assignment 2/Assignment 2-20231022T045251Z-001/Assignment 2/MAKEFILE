# Compiler and flags
CC = gcc
CFLAGS = -Wall -pedantic -std=c89

# Executable name
TARGET = traffic

# Source files
SRCS = main.c game.c Terminal.c fileReader.c terminalInput.c carMovement.c

# Object files
OBJS = $(SRCS:.c=.o)

# Header files
DEPS = game.h Terminal.h carMovement.h terminalInput.h fileReader.h

# Rule to build the executable
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o $(TARGET)

# Rule to compile source files
%.o: %.c $(DEPS)
	$(CC) $(CFLAGS) -c $<

# Clean up object files and the executable
clean:
	rm -f $(OBJS) $(TARGET)

# Phony target to compile and run the program
run: $(TARGET)
	./$(TARGET)


# Phony target to compile and run with valgrind for memory checking
valgrind: $(TARGET)
	valgrind ./$(TARGET)

.PHONY: clean run valgrind
